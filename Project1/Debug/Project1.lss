
Project1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000004a0  00000534  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004a0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080010c  0080010c  00000540  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000540  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000570  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003aa  00000000  00000000  000005c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000025d  00000000  00000000  0000096a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000265  00000000  00000000  00000bc7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  00000e2c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001d6  00000000  00000000  00000e94  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000026  00000000  00000000  0000106a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001090  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e0 ea       	ldi	r30, 0xA0	; 160
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ac 30       	cpi	r26, 0x0C	; 12
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	ac e0       	ldi	r26, 0x0C	; 12
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a6 31       	cpi	r26, 0x16	; 22
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 6c 00 	call	0xd8	; 0xd8 <main>
  a6:	0c 94 4e 02 	jmp	0x49c	; 0x49c <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <USART_Transmit>:
#include <stdio.h>

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
  ae:	5d 9b       	sbis	0x0b, 5	; 11
  b0:	fe cf       	rjmp	.-4      	; 0xae <USART_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
  b2:	8c b9       	out	0x0c, r24	; 12
  b4:	08 95       	ret

000000b6 <USART_Receive>:
}

unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
  b6:	5f 9b       	sbis	0x0b, 7	; 11
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
  ba:	8c b1       	in	r24, 0x0c	; 12
}
  bc:	08 95       	ret

000000be <USART_Init>:
void USART_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
  be:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
  c0:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
  c2:	88 e1       	ldi	r24, 0x18	; 24
  c4:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
  c6:	8e e8       	ldi	r24, 0x8E	; 142
  c8:	80 bd       	out	0x20, r24	; 32
	fdevopen( USART_Transmit,USART_Receive  );
  ca:	6b e5       	ldi	r22, 0x5B	; 91
  cc:	70 e0       	ldi	r23, 0x00	; 0
  ce:	87 e5       	ldi	r24, 0x57	; 87
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	0e 94 8c 00 	call	0x118	; 0x118 <fdevopen>
  d6:	08 95       	ret

000000d8 <main>:

#define MYUBRR FOSC/16/BAUD-1

int main(void)
{
	USART_Init(MYUBRR);
  d8:	8f e1       	ldi	r24, 0x1F	; 31
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Init>
	
	DDRA = 0xFF;
  e0:	8f ef       	ldi	r24, 0xFF	; 255
  e2:	8a bb       	out	0x1a, r24	; 26
	unsigned char c = 'a';
	
    while(1)
    {
		PORTA=0xFF;
  e4:	cf ef       	ldi	r28, 0xFF	; 255
  e6:	cb bb       	out	0x1b, r28	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e8:	2f ef       	ldi	r18, 0xFF	; 255
  ea:	8f ef       	ldi	r24, 0xFF	; 255
  ec:	9e e0       	ldi	r25, 0x0E	; 14
  ee:	21 50       	subi	r18, 0x01	; 1
  f0:	80 40       	sbci	r24, 0x00	; 0
  f2:	90 40       	sbci	r25, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x16>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x20>
  f8:	00 00       	nop
		_delay_ms(1000);
		PORTA=0x00;
  fa:	1b ba       	out	0x1b, r1	; 27
  fc:	2f ef       	ldi	r18, 0xFF	; 255
  fe:	8f ef       	ldi	r24, 0xFF	; 255
 100:	9e e0       	ldi	r25, 0x0E	; 14
 102:	21 50       	subi	r18, 0x01	; 1
 104:	80 40       	sbci	r24, 0x00	; 0
 106:	90 40       	sbci	r25, 0x00	; 0
 108:	e1 f7       	brne	.-8      	; 0x102 <main+0x2a>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <main+0x34>
 10c:	00 00       	nop
		_delay_ms(1000);
		
		//USART_Transmit(c);
		printf("hello\n");
 10e:	86 e0       	ldi	r24, 0x06	; 6
 110:	91 e0       	ldi	r25, 0x01	; 1
 112:	0e 94 d7 00 	call	0x1ae	; 0x1ae <puts>
 116:	e7 cf       	rjmp	.-50     	; 0xe6 <main+0xe>

00000118 <fdevopen>:
 118:	0f 93       	push	r16
 11a:	1f 93       	push	r17
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	ec 01       	movw	r28, r24
 122:	8b 01       	movw	r16, r22
 124:	00 97       	sbiw	r24, 0x00	; 0
 126:	31 f4       	brne	.+12     	; 0x134 <fdevopen+0x1c>
 128:	61 15       	cp	r22, r1
 12a:	71 05       	cpc	r23, r1
 12c:	19 f4       	brne	.+6      	; 0x134 <fdevopen+0x1c>
 12e:	80 e0       	ldi	r24, 0x00	; 0
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	38 c0       	rjmp	.+112    	; 0x1a4 <fdevopen+0x8c>
 134:	6e e0       	ldi	r22, 0x0E	; 14
 136:	70 e0       	ldi	r23, 0x00	; 0
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	0e 94 04 01 	call	0x208	; 0x208 <calloc>
 140:	fc 01       	movw	r30, r24
 142:	00 97       	sbiw	r24, 0x00	; 0
 144:	a1 f3       	breq	.-24     	; 0x12e <fdevopen+0x16>
 146:	80 e8       	ldi	r24, 0x80	; 128
 148:	83 83       	std	Z+3, r24	; 0x03
 14a:	01 15       	cp	r16, r1
 14c:	11 05       	cpc	r17, r1
 14e:	71 f0       	breq	.+28     	; 0x16c <fdevopen+0x54>
 150:	13 87       	std	Z+11, r17	; 0x0b
 152:	02 87       	std	Z+10, r16	; 0x0a
 154:	81 e8       	ldi	r24, 0x81	; 129
 156:	83 83       	std	Z+3, r24	; 0x03
 158:	80 91 0c 01 	lds	r24, 0x010C
 15c:	90 91 0d 01 	lds	r25, 0x010D
 160:	89 2b       	or	r24, r25
 162:	21 f4       	brne	.+8      	; 0x16c <fdevopen+0x54>
 164:	f0 93 0d 01 	sts	0x010D, r31
 168:	e0 93 0c 01 	sts	0x010C, r30
 16c:	20 97       	sbiw	r28, 0x00	; 0
 16e:	c9 f0       	breq	.+50     	; 0x1a2 <fdevopen+0x8a>
 170:	d1 87       	std	Z+9, r29	; 0x09
 172:	c0 87       	std	Z+8, r28	; 0x08
 174:	83 81       	ldd	r24, Z+3	; 0x03
 176:	82 60       	ori	r24, 0x02	; 2
 178:	83 83       	std	Z+3, r24	; 0x03
 17a:	80 91 0e 01 	lds	r24, 0x010E
 17e:	90 91 0f 01 	lds	r25, 0x010F
 182:	89 2b       	or	r24, r25
 184:	71 f4       	brne	.+28     	; 0x1a2 <fdevopen+0x8a>
 186:	f0 93 0f 01 	sts	0x010F, r31
 18a:	e0 93 0e 01 	sts	0x010E, r30
 18e:	80 91 10 01 	lds	r24, 0x0110
 192:	90 91 11 01 	lds	r25, 0x0111
 196:	89 2b       	or	r24, r25
 198:	21 f4       	brne	.+8      	; 0x1a2 <fdevopen+0x8a>
 19a:	f0 93 11 01 	sts	0x0111, r31
 19e:	e0 93 10 01 	sts	0x0110, r30
 1a2:	cf 01       	movw	r24, r30
 1a4:	df 91       	pop	r29
 1a6:	cf 91       	pop	r28
 1a8:	1f 91       	pop	r17
 1aa:	0f 91       	pop	r16
 1ac:	08 95       	ret

000001ae <puts>:
 1ae:	0f 93       	push	r16
 1b0:	1f 93       	push	r17
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	e0 91 0e 01 	lds	r30, 0x010E
 1ba:	f0 91 0f 01 	lds	r31, 0x010F
 1be:	23 81       	ldd	r18, Z+3	; 0x03
 1c0:	21 ff       	sbrs	r18, 1
 1c2:	1b c0       	rjmp	.+54     	; 0x1fa <puts+0x4c>
 1c4:	ec 01       	movw	r28, r24
 1c6:	00 e0       	ldi	r16, 0x00	; 0
 1c8:	10 e0       	ldi	r17, 0x00	; 0
 1ca:	89 91       	ld	r24, Y+
 1cc:	60 91 0e 01 	lds	r22, 0x010E
 1d0:	70 91 0f 01 	lds	r23, 0x010F
 1d4:	db 01       	movw	r26, r22
 1d6:	18 96       	adiw	r26, 0x08	; 8
 1d8:	ed 91       	ld	r30, X+
 1da:	fc 91       	ld	r31, X
 1dc:	19 97       	sbiw	r26, 0x09	; 9
 1de:	88 23       	and	r24, r24
 1e0:	31 f0       	breq	.+12     	; 0x1ee <puts+0x40>
 1e2:	09 95       	icall
 1e4:	89 2b       	or	r24, r25
 1e6:	89 f3       	breq	.-30     	; 0x1ca <puts+0x1c>
 1e8:	0f ef       	ldi	r16, 0xFF	; 255
 1ea:	1f ef       	ldi	r17, 0xFF	; 255
 1ec:	ee cf       	rjmp	.-36     	; 0x1ca <puts+0x1c>
 1ee:	8a e0       	ldi	r24, 0x0A	; 10
 1f0:	09 95       	icall
 1f2:	89 2b       	or	r24, r25
 1f4:	11 f4       	brne	.+4      	; 0x1fa <puts+0x4c>
 1f6:	c8 01       	movw	r24, r16
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <puts+0x50>
 1fa:	8f ef       	ldi	r24, 0xFF	; 255
 1fc:	9f ef       	ldi	r25, 0xFF	; 255
 1fe:	df 91       	pop	r29
 200:	cf 91       	pop	r28
 202:	1f 91       	pop	r17
 204:	0f 91       	pop	r16
 206:	08 95       	ret

00000208 <calloc>:
 208:	0f 93       	push	r16
 20a:	1f 93       	push	r17
 20c:	cf 93       	push	r28
 20e:	df 93       	push	r29
 210:	86 9f       	mul	r24, r22
 212:	80 01       	movw	r16, r0
 214:	87 9f       	mul	r24, r23
 216:	10 0d       	add	r17, r0
 218:	96 9f       	mul	r25, r22
 21a:	10 0d       	add	r17, r0
 21c:	11 24       	eor	r1, r1
 21e:	c8 01       	movw	r24, r16
 220:	0e 94 20 01 	call	0x240	; 0x240 <malloc>
 224:	ec 01       	movw	r28, r24
 226:	00 97       	sbiw	r24, 0x00	; 0
 228:	29 f0       	breq	.+10     	; 0x234 <calloc+0x2c>
 22a:	a8 01       	movw	r20, r16
 22c:	60 e0       	ldi	r22, 0x00	; 0
 22e:	70 e0       	ldi	r23, 0x00	; 0
 230:	0e 94 47 02 	call	0x48e	; 0x48e <memset>
 234:	ce 01       	movw	r24, r28
 236:	df 91       	pop	r29
 238:	cf 91       	pop	r28
 23a:	1f 91       	pop	r17
 23c:	0f 91       	pop	r16
 23e:	08 95       	ret

00000240 <malloc>:
 240:	cf 93       	push	r28
 242:	df 93       	push	r29
 244:	82 30       	cpi	r24, 0x02	; 2
 246:	91 05       	cpc	r25, r1
 248:	10 f4       	brcc	.+4      	; 0x24e <malloc+0xe>
 24a:	82 e0       	ldi	r24, 0x02	; 2
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	e0 91 14 01 	lds	r30, 0x0114
 252:	f0 91 15 01 	lds	r31, 0x0115
 256:	20 e0       	ldi	r18, 0x00	; 0
 258:	30 e0       	ldi	r19, 0x00	; 0
 25a:	a0 e0       	ldi	r26, 0x00	; 0
 25c:	b0 e0       	ldi	r27, 0x00	; 0
 25e:	30 97       	sbiw	r30, 0x00	; 0
 260:	39 f1       	breq	.+78     	; 0x2b0 <malloc+0x70>
 262:	40 81       	ld	r20, Z
 264:	51 81       	ldd	r21, Z+1	; 0x01
 266:	48 17       	cp	r20, r24
 268:	59 07       	cpc	r21, r25
 26a:	b8 f0       	brcs	.+46     	; 0x29a <malloc+0x5a>
 26c:	48 17       	cp	r20, r24
 26e:	59 07       	cpc	r21, r25
 270:	71 f4       	brne	.+28     	; 0x28e <malloc+0x4e>
 272:	82 81       	ldd	r24, Z+2	; 0x02
 274:	93 81       	ldd	r25, Z+3	; 0x03
 276:	10 97       	sbiw	r26, 0x00	; 0
 278:	29 f0       	breq	.+10     	; 0x284 <malloc+0x44>
 27a:	13 96       	adiw	r26, 0x03	; 3
 27c:	9c 93       	st	X, r25
 27e:	8e 93       	st	-X, r24
 280:	12 97       	sbiw	r26, 0x02	; 2
 282:	2c c0       	rjmp	.+88     	; 0x2dc <malloc+0x9c>
 284:	90 93 15 01 	sts	0x0115, r25
 288:	80 93 14 01 	sts	0x0114, r24
 28c:	27 c0       	rjmp	.+78     	; 0x2dc <malloc+0x9c>
 28e:	21 15       	cp	r18, r1
 290:	31 05       	cpc	r19, r1
 292:	31 f0       	breq	.+12     	; 0x2a0 <malloc+0x60>
 294:	42 17       	cp	r20, r18
 296:	53 07       	cpc	r21, r19
 298:	18 f0       	brcs	.+6      	; 0x2a0 <malloc+0x60>
 29a:	a9 01       	movw	r20, r18
 29c:	db 01       	movw	r26, r22
 29e:	01 c0       	rjmp	.+2      	; 0x2a2 <malloc+0x62>
 2a0:	ef 01       	movw	r28, r30
 2a2:	9a 01       	movw	r18, r20
 2a4:	bd 01       	movw	r22, r26
 2a6:	df 01       	movw	r26, r30
 2a8:	02 80       	ldd	r0, Z+2	; 0x02
 2aa:	f3 81       	ldd	r31, Z+3	; 0x03
 2ac:	e0 2d       	mov	r30, r0
 2ae:	d7 cf       	rjmp	.-82     	; 0x25e <malloc+0x1e>
 2b0:	21 15       	cp	r18, r1
 2b2:	31 05       	cpc	r19, r1
 2b4:	f9 f0       	breq	.+62     	; 0x2f4 <malloc+0xb4>
 2b6:	28 1b       	sub	r18, r24
 2b8:	39 0b       	sbc	r19, r25
 2ba:	24 30       	cpi	r18, 0x04	; 4
 2bc:	31 05       	cpc	r19, r1
 2be:	80 f4       	brcc	.+32     	; 0x2e0 <malloc+0xa0>
 2c0:	8a 81       	ldd	r24, Y+2	; 0x02
 2c2:	9b 81       	ldd	r25, Y+3	; 0x03
 2c4:	61 15       	cp	r22, r1
 2c6:	71 05       	cpc	r23, r1
 2c8:	21 f0       	breq	.+8      	; 0x2d2 <malloc+0x92>
 2ca:	fb 01       	movw	r30, r22
 2cc:	93 83       	std	Z+3, r25	; 0x03
 2ce:	82 83       	std	Z+2, r24	; 0x02
 2d0:	04 c0       	rjmp	.+8      	; 0x2da <malloc+0x9a>
 2d2:	90 93 15 01 	sts	0x0115, r25
 2d6:	80 93 14 01 	sts	0x0114, r24
 2da:	fe 01       	movw	r30, r28
 2dc:	32 96       	adiw	r30, 0x02	; 2
 2de:	44 c0       	rjmp	.+136    	; 0x368 <malloc+0x128>
 2e0:	fe 01       	movw	r30, r28
 2e2:	e2 0f       	add	r30, r18
 2e4:	f3 1f       	adc	r31, r19
 2e6:	81 93       	st	Z+, r24
 2e8:	91 93       	st	Z+, r25
 2ea:	22 50       	subi	r18, 0x02	; 2
 2ec:	31 09       	sbc	r19, r1
 2ee:	39 83       	std	Y+1, r19	; 0x01
 2f0:	28 83       	st	Y, r18
 2f2:	3a c0       	rjmp	.+116    	; 0x368 <malloc+0x128>
 2f4:	20 91 12 01 	lds	r18, 0x0112
 2f8:	30 91 13 01 	lds	r19, 0x0113
 2fc:	23 2b       	or	r18, r19
 2fe:	41 f4       	brne	.+16     	; 0x310 <malloc+0xd0>
 300:	20 91 02 01 	lds	r18, 0x0102
 304:	30 91 03 01 	lds	r19, 0x0103
 308:	30 93 13 01 	sts	0x0113, r19
 30c:	20 93 12 01 	sts	0x0112, r18
 310:	20 91 00 01 	lds	r18, 0x0100
 314:	30 91 01 01 	lds	r19, 0x0101
 318:	21 15       	cp	r18, r1
 31a:	31 05       	cpc	r19, r1
 31c:	41 f4       	brne	.+16     	; 0x32e <malloc+0xee>
 31e:	2d b7       	in	r18, 0x3d	; 61
 320:	3e b7       	in	r19, 0x3e	; 62
 322:	40 91 04 01 	lds	r20, 0x0104
 326:	50 91 05 01 	lds	r21, 0x0105
 32a:	24 1b       	sub	r18, r20
 32c:	35 0b       	sbc	r19, r21
 32e:	e0 91 12 01 	lds	r30, 0x0112
 332:	f0 91 13 01 	lds	r31, 0x0113
 336:	e2 17       	cp	r30, r18
 338:	f3 07       	cpc	r31, r19
 33a:	a0 f4       	brcc	.+40     	; 0x364 <malloc+0x124>
 33c:	2e 1b       	sub	r18, r30
 33e:	3f 0b       	sbc	r19, r31
 340:	28 17       	cp	r18, r24
 342:	39 07       	cpc	r19, r25
 344:	78 f0       	brcs	.+30     	; 0x364 <malloc+0x124>
 346:	ac 01       	movw	r20, r24
 348:	4e 5f       	subi	r20, 0xFE	; 254
 34a:	5f 4f       	sbci	r21, 0xFF	; 255
 34c:	24 17       	cp	r18, r20
 34e:	35 07       	cpc	r19, r21
 350:	48 f0       	brcs	.+18     	; 0x364 <malloc+0x124>
 352:	4e 0f       	add	r20, r30
 354:	5f 1f       	adc	r21, r31
 356:	50 93 13 01 	sts	0x0113, r21
 35a:	40 93 12 01 	sts	0x0112, r20
 35e:	81 93       	st	Z+, r24
 360:	91 93       	st	Z+, r25
 362:	02 c0       	rjmp	.+4      	; 0x368 <malloc+0x128>
 364:	e0 e0       	ldi	r30, 0x00	; 0
 366:	f0 e0       	ldi	r31, 0x00	; 0
 368:	cf 01       	movw	r24, r30
 36a:	df 91       	pop	r29
 36c:	cf 91       	pop	r28
 36e:	08 95       	ret

00000370 <free>:
 370:	cf 93       	push	r28
 372:	df 93       	push	r29
 374:	00 97       	sbiw	r24, 0x00	; 0
 376:	09 f4       	brne	.+2      	; 0x37a <free+0xa>
 378:	87 c0       	rjmp	.+270    	; 0x488 <free+0x118>
 37a:	fc 01       	movw	r30, r24
 37c:	32 97       	sbiw	r30, 0x02	; 2
 37e:	13 82       	std	Z+3, r1	; 0x03
 380:	12 82       	std	Z+2, r1	; 0x02
 382:	c0 91 14 01 	lds	r28, 0x0114
 386:	d0 91 15 01 	lds	r29, 0x0115
 38a:	20 97       	sbiw	r28, 0x00	; 0
 38c:	81 f4       	brne	.+32     	; 0x3ae <free+0x3e>
 38e:	20 81       	ld	r18, Z
 390:	31 81       	ldd	r19, Z+1	; 0x01
 392:	28 0f       	add	r18, r24
 394:	39 1f       	adc	r19, r25
 396:	80 91 12 01 	lds	r24, 0x0112
 39a:	90 91 13 01 	lds	r25, 0x0113
 39e:	82 17       	cp	r24, r18
 3a0:	93 07       	cpc	r25, r19
 3a2:	79 f5       	brne	.+94     	; 0x402 <free+0x92>
 3a4:	f0 93 13 01 	sts	0x0113, r31
 3a8:	e0 93 12 01 	sts	0x0112, r30
 3ac:	6d c0       	rjmp	.+218    	; 0x488 <free+0x118>
 3ae:	de 01       	movw	r26, r28
 3b0:	20 e0       	ldi	r18, 0x00	; 0
 3b2:	30 e0       	ldi	r19, 0x00	; 0
 3b4:	ae 17       	cp	r26, r30
 3b6:	bf 07       	cpc	r27, r31
 3b8:	50 f4       	brcc	.+20     	; 0x3ce <free+0x5e>
 3ba:	12 96       	adiw	r26, 0x02	; 2
 3bc:	4d 91       	ld	r20, X+
 3be:	5c 91       	ld	r21, X
 3c0:	13 97       	sbiw	r26, 0x03	; 3
 3c2:	9d 01       	movw	r18, r26
 3c4:	41 15       	cp	r20, r1
 3c6:	51 05       	cpc	r21, r1
 3c8:	09 f1       	breq	.+66     	; 0x40c <free+0x9c>
 3ca:	da 01       	movw	r26, r20
 3cc:	f3 cf       	rjmp	.-26     	; 0x3b4 <free+0x44>
 3ce:	b3 83       	std	Z+3, r27	; 0x03
 3d0:	a2 83       	std	Z+2, r26	; 0x02
 3d2:	40 81       	ld	r20, Z
 3d4:	51 81       	ldd	r21, Z+1	; 0x01
 3d6:	84 0f       	add	r24, r20
 3d8:	95 1f       	adc	r25, r21
 3da:	8a 17       	cp	r24, r26
 3dc:	9b 07       	cpc	r25, r27
 3de:	71 f4       	brne	.+28     	; 0x3fc <free+0x8c>
 3e0:	8d 91       	ld	r24, X+
 3e2:	9c 91       	ld	r25, X
 3e4:	11 97       	sbiw	r26, 0x01	; 1
 3e6:	84 0f       	add	r24, r20
 3e8:	95 1f       	adc	r25, r21
 3ea:	02 96       	adiw	r24, 0x02	; 2
 3ec:	91 83       	std	Z+1, r25	; 0x01
 3ee:	80 83       	st	Z, r24
 3f0:	12 96       	adiw	r26, 0x02	; 2
 3f2:	8d 91       	ld	r24, X+
 3f4:	9c 91       	ld	r25, X
 3f6:	13 97       	sbiw	r26, 0x03	; 3
 3f8:	93 83       	std	Z+3, r25	; 0x03
 3fa:	82 83       	std	Z+2, r24	; 0x02
 3fc:	21 15       	cp	r18, r1
 3fe:	31 05       	cpc	r19, r1
 400:	29 f4       	brne	.+10     	; 0x40c <free+0x9c>
 402:	f0 93 15 01 	sts	0x0115, r31
 406:	e0 93 14 01 	sts	0x0114, r30
 40a:	3e c0       	rjmp	.+124    	; 0x488 <free+0x118>
 40c:	d9 01       	movw	r26, r18
 40e:	13 96       	adiw	r26, 0x03	; 3
 410:	fc 93       	st	X, r31
 412:	ee 93       	st	-X, r30
 414:	12 97       	sbiw	r26, 0x02	; 2
 416:	4d 91       	ld	r20, X+
 418:	5d 91       	ld	r21, X+
 41a:	a4 0f       	add	r26, r20
 41c:	b5 1f       	adc	r27, r21
 41e:	ea 17       	cp	r30, r26
 420:	fb 07       	cpc	r31, r27
 422:	79 f4       	brne	.+30     	; 0x442 <free+0xd2>
 424:	80 81       	ld	r24, Z
 426:	91 81       	ldd	r25, Z+1	; 0x01
 428:	84 0f       	add	r24, r20
 42a:	95 1f       	adc	r25, r21
 42c:	02 96       	adiw	r24, 0x02	; 2
 42e:	d9 01       	movw	r26, r18
 430:	11 96       	adiw	r26, 0x01	; 1
 432:	9c 93       	st	X, r25
 434:	8e 93       	st	-X, r24
 436:	82 81       	ldd	r24, Z+2	; 0x02
 438:	93 81       	ldd	r25, Z+3	; 0x03
 43a:	13 96       	adiw	r26, 0x03	; 3
 43c:	9c 93       	st	X, r25
 43e:	8e 93       	st	-X, r24
 440:	12 97       	sbiw	r26, 0x02	; 2
 442:	e0 e0       	ldi	r30, 0x00	; 0
 444:	f0 e0       	ldi	r31, 0x00	; 0
 446:	8a 81       	ldd	r24, Y+2	; 0x02
 448:	9b 81       	ldd	r25, Y+3	; 0x03
 44a:	00 97       	sbiw	r24, 0x00	; 0
 44c:	19 f0       	breq	.+6      	; 0x454 <free+0xe4>
 44e:	fe 01       	movw	r30, r28
 450:	ec 01       	movw	r28, r24
 452:	f9 cf       	rjmp	.-14     	; 0x446 <free+0xd6>
 454:	ce 01       	movw	r24, r28
 456:	02 96       	adiw	r24, 0x02	; 2
 458:	28 81       	ld	r18, Y
 45a:	39 81       	ldd	r19, Y+1	; 0x01
 45c:	82 0f       	add	r24, r18
 45e:	93 1f       	adc	r25, r19
 460:	20 91 12 01 	lds	r18, 0x0112
 464:	30 91 13 01 	lds	r19, 0x0113
 468:	28 17       	cp	r18, r24
 46a:	39 07       	cpc	r19, r25
 46c:	69 f4       	brne	.+26     	; 0x488 <free+0x118>
 46e:	30 97       	sbiw	r30, 0x00	; 0
 470:	29 f4       	brne	.+10     	; 0x47c <free+0x10c>
 472:	10 92 15 01 	sts	0x0115, r1
 476:	10 92 14 01 	sts	0x0114, r1
 47a:	02 c0       	rjmp	.+4      	; 0x480 <free+0x110>
 47c:	13 82       	std	Z+3, r1	; 0x03
 47e:	12 82       	std	Z+2, r1	; 0x02
 480:	d0 93 13 01 	sts	0x0113, r29
 484:	c0 93 12 01 	sts	0x0112, r28
 488:	df 91       	pop	r29
 48a:	cf 91       	pop	r28
 48c:	08 95       	ret

0000048e <memset>:
 48e:	dc 01       	movw	r26, r24
 490:	01 c0       	rjmp	.+2      	; 0x494 <memset+0x6>
 492:	6d 93       	st	X+, r22
 494:	41 50       	subi	r20, 0x01	; 1
 496:	50 40       	sbci	r21, 0x00	; 0
 498:	e0 f7       	brcc	.-8      	; 0x492 <memset+0x4>
 49a:	08 95       	ret

0000049c <_exit>:
 49c:	f8 94       	cli

0000049e <__stop_program>:
 49e:	ff cf       	rjmp	.-2      	; 0x49e <__stop_program>
